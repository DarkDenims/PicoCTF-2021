flag = [ord(x) for x in "picoCTF{aaa}"]

def B_j(idx, char):
    char ^= 5  # 224
    char = B_g(idx, char)
    return char

def B_h(idx, char):
    rc = idx % 3  # 201
    uc = rc == 1  # 204
    if uc & 1 == 0:  # 206
        char = B_j(idx, char)  # 207
        return char
    char ^= 6  # 214
    char = B_g(idx, char)  # 216, B_i=B_g
    return char

def B_g(idx, char):
    # End function
    return char

def B_e(idx, char):
    if idx % 3:  # 186-187
        char = B_h(idx, char)
        return char
    char ^= 7  # 194
    char = B_g(idx, char)
    return char

def B_f(idx, char):
    char ^= 8  # 181
    char = B_e(idx, char)
    return char

def B_d(idx, char):
    gb = idx % 10  # 153
    char ^= gb  # 159
    if idx % 2:  # 163-164
        char = B_f(idx, char)
        return char
    char ^= 9
    char = B_e(idx, char)
    return char

def B_c(idx, char):
    oa = idx > 2  # 132
    if oa & 1 == 0:  # 134-135
        char = B_d(idx, char)
        return char
    char ^= flag[idx - 3]  # 148
    char = B_d(idx, char)  # 150
    return char

def B_m(idx, char):
    # End function
    return char

def check_flag():
    output = flag
    for idx, char in enumerate(output):
        char ^= 20  # 104
        u = idx > 0  # 109
        if u & 1 == 0:  # 111-112
            char = B_c(idx, char)
            output[idx] = char
            continue
        char ^= output[idx-1]  # 125
        char = B_c(idx, char)  # 127
        
        output[idx] = char
    
    for idx, char in enumerate(output):
        if idx % 2:
            char = B_m(idx, char)
            output[idx] = char
            continue
        temp = char
        char = output[idx + 1]  # 265-268
        output[idx + 1] = temp  # 269-273
        char = B_m(idx, char)
        
        output[idx] = char
    
    return output
    

output = check_flag()
print(output)
